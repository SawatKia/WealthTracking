name: Deploy to staging server

on:
  pull_request:
    types:
      - closed
    branches:
      - main

jobs:
  build_deploy:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: verify server port connectivity
        run: |
          nc -zv ${{ secrets.STAGING_SERVERS_IP }} 22 80 443

      - name: Setup SSH Connection
        run: |
          echo "Setting up SSH connection..."
          mkdir -p ~/.ssh
          echo "${{ secrets.GH_ACTION_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          eval "$(ssh-agent -s)"
          ssh-add ~/.ssh/id_rsa
          echo "SSH setup complete. Testing connection..."
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.STAGING_SERVER_USERNAME }}@${{ secrets.STAGING_SERVERS_IP }} "echo 'SSH connection successful!'"

      - name: Build and Deploy on Server
        id: deploy
        run: |
          set -o pipefail
          echo "Starting build and deployment process on the server..."
          # Capture output (both stdout and stderr) in a variable
          output=$(ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.STAGING_SERVER_USERNAME }}@${{ secrets.STAGING_SERVERS_IP }} << 'EOF'
            echo "Navigating to project directory..."
            cd ~/WealthTracking || { echo "Failed to navigate to project directory"; exit 1; }
            
            echo "Executing deploy script..."
            ./deploy.sh ${{ secrets.STAGING_SERVERS_IP }} || { echo "Deployment script failed"; exit 1; }
            
            echo "Deployment completed successfully."
          EOF
          2>&1)
          exit_code=$?
          echo "$output"
          if [ $exit_code -ne 0 ]; then
            echo "reason=$output" >> $GITHUB_ENV
            exit $exit_code
          fi

      - name: Notify Discord on Success
        if: success()
        uses: nobrayner/discord-webhook@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          discord-webhook: ${{ secrets.DISCORD_WEBHOOK }}
          username: "üöÄ Workflow Notifier"
          avatar-url: "https://avatars.githubusercontent.com/u/88827707?v=4"
          title: "‚ú® **${{ github.workflow }}** ran **${{ job.status }}**"
          description: |
            üîî **Triggered Event**: *`${{ github.event_name }}`* initiated by **@`${{ github.actor }}`**
            üîÑ Associated **Commit**: <https://github.com/${{ github.repository }}/commit/${{ github.sha }}>
            üì¶ **Job** ran: `${{ github.job }}`
            üõ†Ô∏è **Action Status**: `${{ job.status }}`

            Deployment completed successfully.
          include-details: "true"
          color-success: "#28a745" # Green for running the job success
          color-failure: "#8a0d04" # Dark Red for running the job failure
          color-cancelled: "#ffc107" # Yellow for running the job cancelled

      - name: Notify Discord on Failure
        if: failure()
        uses: nobrayner/discord-webhook@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          discord-webhook: ${{ secrets.DISCORD_WEBHOOK }}
          username: "üöÄ Workflow Notifier"
          avatar-url: "https://avatars.githubusercontent.com/u/88827707?v=4"
          title: "‚ùå **${{ github.workflow }}** failed"
          description: |
            üîî **Triggered Event**: *`${{ github.event_name }}`* initiated by **@`${{ github.actor }}`**
            üîÑ Associated **Commit**: <https://github.com/${{ github.repository }}/commit/${{ github.sha }}>
            üì¶ **Job** ran: `${{ github.job }}`
            ‚ùå **Action Status**: `${{ job.status }}`

            **Failure Reason:** ${{ env.reason || 'Unknown reason. Please check the logs.' }}

            Please check the logs for  more details.
          include-details: "true"
          color-success: "#d73a49" # Green for running the job success
          color-failure: "#8a0d04" # Dark Red for running the job failure
          color-cancelled: "#ffc107" # Yellow for running the job cancelled

      - name: Delete SSH Key
        if: always()
        run: |
          echo "Cleaning up SSH key..."
          rm -f ~/.ssh/id_rsa
          echo "SSH key deleted."
